services:
  nginx:
    image: nginx:latest
    container_name: nginx
    environment:
      - SERVER_HOST=${SERVER_HOST}
      - HOME_ASSISTANT_HOST=${HOME_ASSISTANT_HOST}
      - MEDIA_HOST=${MEDIA_HOST}
    volumes:
      - ./nginx:/etc/nginx
      - ./static:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 443:443
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:80/health || exit 1"]
      interval: 120s
      timeout: 5s
      retries: 1
      start_period: 15s

  duckdns:
    image: ghcr.io/linuxserver/duckdns:latest
    container_name: duckdns
    environment:
      - SUBDOMAINS=${DUCKDNS_SUBDOMAIN}
      - TOKEN=${DUCKDNS_TOKEN}
      - TZ=Europe/London
    restart: unless-stopped

  certbot:
    image: infinityofspace/certbot_dns_duckdns:latest
    container_name: certbot_duckdns
    volumes:
      - letsencrypt:/etc/letsencrypt
      - letsencrypt_log:/var/log/letsencrypt
    command: certonly
      --non-interactive
      --agree-tos
      --email ${CERTBOT_EMAIL}
      --preferred-challenges dns
      --authenticator dns-duckdns
      --dns-duckdns-token ${DUCKDNS_TOKEN}
      --dns-duckdns-propagation-seconds 30
      -d "*.${DUCKDNS_SUBDOMAIN}.duckdns.org"

  certbot_renew:
    build: certbot/.
    container_name: certbot_renew
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CERTBOT_CONTAINER_NAME=certbot_duckdns
      - NGINX_CONTAINER_NAME=nginx

volumes:
  letsencrypt:
  letsencrypt_log:
